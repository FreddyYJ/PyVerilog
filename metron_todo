the error checking should really be independent passes between stages

may need a "hoist members" step for some SV tools

PREPROC

void func() {
  static const int local_constant = N;
}

packed structs are going to behave differently if bitsliced, not sure how to
deal with that... but if you can't express it in c do we care?


A bunch of the subcursor stuff could be replaced with splice
  probably all of it if you add a component context param to splice

If we don't emit anything for a tick() or tock(), we should not emit the tock itself
  soooooo... if all the body elements are component calls without args?
  not worth

Unions?


do a preproc if else test

Make lockstep test framework for all the metron_good tests
  Make all of them have a toplevel "logic<32> tock();"
  Run for N cycles and check that return values from both
  versions match, but don't care about the actual value.









----------

assert that components are only bound once?
  no, they can be bound multiple times, won't break anything
component calls can only be at toplevel?
  no, but they have to be in a compound statement so we have a place to put bindings

